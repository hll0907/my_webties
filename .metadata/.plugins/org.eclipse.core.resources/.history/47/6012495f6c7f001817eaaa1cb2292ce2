package com.hll.web.dao;

import com.hll.web.pojo.User;
import com.hll.web.pojo.UserExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import com.hll.web.pojo.UserWithBLOBs;

public interface UserMapper {
    long countByExample(UserExample example);

	int deleteByExample(UserExample example);

	int deleteByPrimaryKey(Integer id);

	int insert(User record);

	int insertSelective(User record);

	List<User> selectByExample(UserExample example);

	int updateByExampleSelective(@Param("record") User record,@Param("example") UserExample example);

	int updateByExample(@Param("record") User record,@Param("example") UserExample example);

	long countByExample(UserExample example);

	int deleteByExample(UserExample example);

	int deleteByPrimaryKey(String user);

	int insert(UserWithBLOBs record);

	int insertSelective(UserWithBLOBs record);

	List<UserWithBLOBs> selectByExampleWithBLOBs(UserExample example);

	List<User> selectByExample(UserExample example);

	UserWithBLOBs selectByPrimaryKey(String user);

	int updateByExampleSelective(@Param("record") UserWithBLOBs record,@Param("example") UserExample example);

	int updateByExampleWithBLOBs(@Param("record") UserWithBLOBs record,@Param("example") UserExample example);

	int updateByExample(@Param("record") User record,@Param("example") UserExample example);

	int updateByPrimaryKeySelective(UserWithBLOBs record);

	int updateByPrimaryKeyWithBLOBs(UserWithBLOBs record);

	int updateByPrimaryKey(User record);

	long countByExample(UserExample example);

    int deleteByExample(UserExample example);

    int deleteByPrimaryKey(Integer id);

    int insert(User record);

    int insertSelective(User record);

    List<User> selectByExample(UserExample example);

    User selectByPrimaryKey(Integer id);

    int updateByExampleSelective(@Param("record") User record, @Param("example") UserExample example);

    int updateByExample(@Param("record") User record, @Param("example") UserExample example);

    int updateByPrimaryKeySelective(User record);

    int updateByPrimaryKey(User record);
}