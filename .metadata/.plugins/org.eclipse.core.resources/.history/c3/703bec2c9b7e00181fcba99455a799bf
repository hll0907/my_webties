package com.hll.Util;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.Iterator;
import java.util.Map;

import com.alibaba.fastjson.JSONObject;

import okhttp3.Call;
import okhttp3.FormBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public final class HttpUtil {
	private static final OkHttpClient oK_HTTP_CLIENT = new OkHttpClient();

	public static enum HttpMethod {
		GET, POST_JSON, POST_FORM;
	}

	/**
	 * http 请求统一入口
	 * 
	 * @param url
	 *            请求地址
	 * @param httpMethod
	 *            请求类型
	 * @param params
	 *            请求参数
	 * @return json 数据
	 */
	public static JSONObject requestHttpServise(String url, HttpMethod httpMethod, Map<String, String> params) {
		switch (httpMethod) {
		case GET:
			return requestHttpGet(url, params);
		case POST_JSON:
			return requestHttpPost(url, params);
		case POST_FORM:
			return requestHttpPostWithForm(url, params);
		}
		return null;
	}

	/**
	 * get请求
	 * 
	 * @param url
	 *            接口地址
	 * @param params
	 *            请求参数
	 * @return
	 */
	private static JSONObject requestHttpGet(String url, Map<String, String> params) {
		Response response = null;

			try {
				if (params != null) {
				String tempParams = mapToParamsString(params);
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return null;
	}

	/**
	 * 
	 * @param url
	 * @param params
	 * @return
	 */
	private static JSONObject requestHttpPost(String url, Map<String, String> params) {
		return null;
	}

	/**
	 * 请求表单提交
	 * 
	 * @param url
	 *            请求地址
	 * @param params
	 *            参数
	 * @return
	 */
	private static JSONObject requestHttpPostWithForm(String url, Map<String, String> params) {
		Response response = null;
		try {
			FormBody.Builder builder = new FormBody.Builder();
			for (String key : params.keySet()) {
				// 追加表单信息
				builder.add(key, params.get(key));
			}
			// 生成表单实体对象
			RequestBody formBody = builder.build();
			// 创建一个请求
			final Request request = new Request.Builder().url(url).post(formBody).build();
			// 创建一个Call
			final Call call = oK_HTTP_CLIENT.newCall(request);
			// 执行请求
			response = call.execute();
			// 请求执行成功
			if (response.isSuccessful()) {
				return JSONObject.parseObject(response.body().string());
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			close(response);
		}
		return null;
	}

	private static String mapToParamsString(Map<String, String> params) throws UnsupportedEncodingException {
		// 处理参数
		if (params == null) {
			return "";
		}
		StringBuilder tempParams = new StringBuilder();
		int pos = 0;
		for (String key : params.keySet()) {
			if (pos > 0) {
				tempParams.append("&");
			}
			tempParams.append(String.format("%s=%s", key, URLEncoder.encode(params.get(key), "utf-8")));
			pos++;
		}
		return tempParams.toString();
	}

	// 关闭请求
	private static void close(Response response) {
		if (response != null) {
			response.close();
		}
	}
}
