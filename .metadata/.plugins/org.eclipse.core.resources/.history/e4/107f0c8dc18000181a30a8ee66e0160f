package com.hll.web.util;

import java.io.File;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.http.HttpServletRequest;

import org.springframework.web.multipart.MultipartFile;

public class CommUtil {

	/**
	 * 去除微信名字的emoji表情
	 * 
	 * @param source
	 * @return
	 */
	public static String filterEmoji(String source) {
		if (source != null) {
			Pattern emoji = Pattern.compile(
					"[\\ud83c\\udc00-\\ud83c\\udfff]|[\\ud83d\\udc00-\\ud83d\\udfff]|[\\u2600-\\u27ff]",
					Pattern.UNICODE_CASE | Pattern.CASE_INSENSITIVE);
			Matcher emojiMatcher = emoji.matcher(source);
			if (emojiMatcher.find()) {
				source = emojiMatcher.replaceAll("*");
				return source;
			}
			return source;
		}
		return source;
	}

	/**
	 * 上传图片（头像）
	 * @param headPic
	 * @param request
	 * @return
	 * @throws IllegalStateException
	 * @throws IOException
	 */
	public static String uploadFile(MultipartFile headPic, HttpServletRequest request)
			throws IllegalStateException, IOException {
		// 文件路径
		String path = null;
		// 判断上传的文件是否为空
		if (headPic != null) {
			// 文件类型
			String type = null;
			// 文件原名称
			String fileName = headPic.getOriginalFilename();
			// 判断文件类型
			type = fileName.indexOf(".") != -1 ? fileName.substring(fileName.lastIndexOf(".") + 1, fileName.length())
					: null;
			if (type != null) {
				// 判断文件类型是否为空
				if ("GIF".equals(type.toUpperCase()) || "PNG".equals(type.toUpperCase())
						|| "JPG".equals(type.toUpperCase())) {
					// 项目在容器中实际发布运行的根路径
					String realPath = request.getSession().getServletContext().getRealPath("/");
					// 自定义的文件名称
					String trueFileName = String.valueOf(System.currentTimeMillis()) + fileName;
					// 设置存放图片文件的路径
					path = realPath + trueFileName;
					// System.out.println("存放图片文件的路径:" + path);
					// 转存文件到指定的路径
					headPic.transferTo(new File(path));
				} else {
					// 不是我们想要的文件类型,请按要求重新上传
					return null;
				}
			} else {
				// 文件类型为空
				return null;
			}
		} else {
			// 没有找到相对应的文件;
			return null;
		}
//		System.out.println(path);
		return path;
	}
}
