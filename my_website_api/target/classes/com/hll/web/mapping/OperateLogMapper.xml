<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hll.web.dao.OperateLogMapper">
	<resultMap id="BaseResultMap" type="com.hll.web.pojo.OperateLog">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="userId" jdbcType="INTEGER" property="userid" />
		<result column="moduleName" jdbcType="VARCHAR" property="modulename" />
		<result column="operateDesc" jdbcType="VARCHAR" property="operatedesc" />
		<result column="ipAddress" jdbcType="VARCHAR" property="ipaddress" />
		<result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="result" jdbcType="VARCHAR" property="result" />
	</resultMap>
	<sql id="Base_Column_List">
		id, userId, moduleName, operateDesc, ipAddress, createTime, result
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from operate_log
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByUserId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from operate_log
		where userId = #{userid,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from operate_log
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from operate_log
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.hll.web.pojo.OperateLog">
		insert into operate_log (id, userId, moduleName,
		operateDesc, ipAddress, createTime,
		result)
		values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER},
		#{modulename,jdbcType=VARCHAR},
		#{operatedesc,jdbcType=VARCHAR}, #{ipaddress,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
		#{result,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.hll.web.pojo.OperateLog">
		insert into operate_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userid != null">
				userId,
			</if>
			<if test="modulename != null">
				moduleName,
			</if>
			<if test="operatedesc != null">
				operateDesc,
			</if>
			<if test="ipaddress != null">
				ipAddress,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="result != null">
				result,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="modulename != null">
				#{modulename,jdbcType=VARCHAR},
			</if>
			<if test="operatedesc != null">
				#{operatedesc,jdbcType=VARCHAR},
			</if>
			<if test="ipaddress != null">
				#{ipaddress,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="result != null">
				#{result,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.hll.web.pojo.OperateLog">
		update operate_log
		<set>
			<if test="userid != null">
				userId = #{userid,jdbcType=INTEGER},
			</if>
			<if test="modulename != null">
				moduleName = #{modulename,jdbcType=VARCHAR},
			</if>
			<if test="operatedesc != null">
				operateDesc = #{operatedesc,jdbcType=VARCHAR},
			</if>
			<if test="ipaddress != null">
				ipAddress = #{ipaddress,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="result != null">
				result = #{result,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hll.web.pojo.OperateLog">
		update operate_log
		set userId = #{userid,jdbcType=INTEGER},
		moduleName = #{modulename,jdbcType=VARCHAR},
		operateDesc = #{operatedesc,jdbcType=VARCHAR},
		ipAddress = #{ipaddress,jdbcType=VARCHAR},
		createTime = #{createtime,jdbcType=TIMESTAMP},
		result = #{result,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>